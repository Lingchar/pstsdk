{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for your help tracking this down. It turns out this was a dumb bug &#40;order of operations issue&#41; in basic_table&#60;T&#62;&#58;&#58;size that I never hit because my PSTs were all too small and my unit test didn&#39;t go down that code path &#40;apparently&#41;. Very foolish of me. Fixed in trunk.",
    "ClosedDate": "2010-05-24T21:57:59.037-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I'm having a difficult time walking through a PST (attached -- contains only junk e-mail for testing).\n \nMy code is taken directly from one of the samples, and looks like this:\nusing namespace pstsdk;\nusing namespace std;\nusing namespace std::placeholders;\n \nvoid process_message(int tab_depth, const message& m)\n{\n    for(int i = 0; i < tab_depth; ++i) cout << '\\t';\n    wcout << m.get_subject() << endl;\n}\n \nvoid process_folder(int tab_depth, const folder& f)\n{\n    for(int i = 0; i < tab_depth; ++i) cout << '\\t';\n    wcout << f.get_name() << L\" (\" << f.get_message_count() << L\")\\n\";\n    \n    for_each(f.message_begin(), f.message_end(), bind(process_message, tab_depth+1, _1));\n    for_each(f.sub_folder_begin(), f.sub_folder_end(), bind(process_folder, tab_depth+1, _1)); \n}\n \nint _tmain(int, TCHAR** argv)\n{\n    pst store(argv[1]);\n \n    process_folder(0, store.open_root_folder());\n \n    return 0;\n}\n \nThe output at the time of the crash looks like this:\n (0)\n\tTop of Outlook data file (0)\n\t\tDeleted Items (0)\n\t\tInbox (123)\n\t\t\tReturned mail: Data format error\n\t\t\tGet Ready for Summer with New SparkPeople Products & Free Shipping!\n\t\t\tMail System Error - Returned Mail\n\t\t\tAll men need this\n\t\t\tstatus\n\t\t\tCrazy 70% Discount for robert\n\t\t\tspamfilter, 12-15 March  +3209 70% Discount.\n\t\t\tOrder your Free trials\n\t\t\tVacation package deals on Hotwire. Book now for summer travel.\n\t\t\tThe heart of a woman\n\t\t\tGet yours Free trials\n\t\t\tBecause she wants it\n\t\t\tGet yours Free Sample\n \nIt doesn't get very far before I get this exception in node.h:\nUnhandled exception at 0x75c5b727 (KernelBase.dll) in psttomsg.exe: Microsoft C++ exception: std::out_of_range at memory location 0x0038d87c..\n \tKernelBase.dll!_RaiseException@16()  + 0x58 bytes\t\n \tmsvcr100d.dll!_CxxThrowException(void * pExceptionObject=0x0038d87c, const _s__ThrowInfo * pThrowInfo=0x0141c5ac)  Line 157\tC++\n>\tpsttomsg.exe!pstsdk::data_block::read<unsigned long>(unsigned long offset=798)  Line 1082\tC++\n \tpsttomsg.exe!pstsdk::node_impl::read<unsigned long>(unsigned int page_num=4, unsigned long offset=798)  Line 931 + 0x64 bytes\tC++\n \tpsttomsg.exe!pstsdk::node::read<unsigned long>(unsigned int page_num=4, unsigned long offset=798)  Line 397 + 0x3a bytes\tC++\n \tpsttomsg.exe!pstsdk::basic_table<unsigned long>::read_raw_row<unsigned long>(unsigned long row=123, unsigned short offset=0)  Line 642 + 0x1e bytes\tC++\n \tpsttomsg.exe!pstsdk::basic_table<unsigned long>::get_row_id(unsigned long row=123)  Line 628\tC++\n \tpsttomsg.exe!pstsdk::const_table_row::get_row_id()  Line 421 + 0x2d bytes\tC++\n \tpsttomsg.exe!pstsdk::message_transform_row::operator()(const pstsdk::const_table_row & row={...})  Line 320 + 0x62 bytes\tC++\n \tpsttomsg.exe!boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>::dereference()  Line 137 + 0x91 bytes\tC++\n \tpsttomsg.exe!boost::iterator_core_access::dereference<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> >(const boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> & f={...})  Line 516 + 0xc bytes\tC++\n \tpsttomsg.exe!boost::iterator_facade<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>,pstsdk::message,boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::random_access_traversal_tag>,pstsdk::message,int>::operator*()  Line 634 + 0x12 bytes\tC++\n \tpsttomsg.exe!std::_For_each<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x01333c3a process_message(int,class pstsdk::message const &), 3, _1))  Line 22 + 0xf bytes\tC++\n \tpsttomsg.exe!std::for_each<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x01333c3a process_message(int,class pstsdk::message const &), 3, _1))  Line 32 + 0xa7 bytes\tC++\n \tpsttomsg.exe!process_folder(int tab_depth=2, const pstsdk::folder & f={...})  Line 21 + 0x8f bytes\tC++\n \tpsttomsg.exe!std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>::_ApplyX<void,int &,pstsdk::folder &>(int & _Ax0=2, pstsdk::folder & _Ax1={...})  Line 7 + 0x2a bytes\tC++\n \tpsttomsg.exe!std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> >::_ApplyX<void,pstsdk::folder,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &>(pstsdk::folder && _Bx0={...}, std::tr1::_Nil & _Bx1={...}, std::tr1::_Nil & _Bx2={...}, std::tr1::_Nil & _Bx3={...}, std::tr1::_Nil & _Bx4={...}, std::tr1::_Nil & _Bx5={...}, std::tr1::_Nil & _Bx6={...}, std::tr1::_Nil & _Bx7={...}, std::tr1::_Nil & _Bx8={...}, std::tr1::_Nil & _Bx9={...})  Line 293\tC++\n \tpsttomsg.exe!std::tr1::_Bind_base<void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > >::operator()<pstsdk::folder>(pstsdk::folder && _CA0={...})  Line 32\tC++\n \tpsttomsg.exe!std::_For_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x01336b88 process_folder(int,class pstsdk::folder const &), 2, _1))  Line 22 + 0x34 bytes\tC++\n \tpsttomsg.exe!std::for_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x01336b88 process_folder(int,class pstsdk::folder const &), 2, _1))  Line 32 + 0xa7 bytes\tC++\n \tpsttomsg.exe!process_folder(int tab_depth=1, const pstsdk::folder & f={...})  Line 22 + 0x8f bytes\tC++\n \tpsttomsg.exe!std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>::_ApplyX<void,int &,pstsdk::folder &>(int & _Ax0=1, pstsdk::folder & _Ax1={...})  Line 7 + 0x2a bytes\tC++\n \tpsttomsg.exe!std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> >::_ApplyX<void,pstsdk::folder,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &>(pstsdk::folder && _Bx0={...}, std::tr1::_Nil & _Bx1={...}, std::tr1::_Nil & _Bx2={...}, std::tr1::_Nil & _Bx3={...}, std::tr1::_Nil & _Bx4={...}, std::tr1::_Nil & _Bx5={...}, std::tr1::_Nil & _Bx6={...}, std::tr1::_Nil & _Bx7={...}, std::tr1::_Nil & _Bx8={...}, std::tr1::_Nil & _Bx9={...})  Line 293\tC++\n \tpsttomsg.exe!std::tr1::_Bind_base<void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > >::operator()<pstsdk::folder>(pstsdk::folder && _CA0={...})  Line 32\tC++\n \tpsttomsg.exe!std::_For_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x01336b88 process_folder(int,class pstsdk::folder const &), 1, _1))  Line 22 + 0x34 bytes\tC++\n \tpsttomsg.exe!std::for_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x01336b88 process_folder(int,class pstsdk::folder const &), 1, _1))  Line 32 + 0xa7 bytes\tC++\n \tpsttomsg.exe!process_folder(int tab_depth=0, const pstsdk::folder & f={...})  Line 22 + 0x8f bytes\tC++\n \tpsttomsg.exe!wmain(int __formal=2, wchar_t * * argv=0x00034938)  Line 29 + 0x33 bytes\tC++\n \nThis is not the only exception I get either ... depending on which PST I attempt to use, I will also get key not found errors in f.message_begin() when enumerating a folder.",
    "LastUpdatedDate": "2013-05-16T02:40:25.72-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "pstsdk",
    "ReportedDate": "2010-05-24T20:20:46.613-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Unhandled exceptions walking a PST",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 6727
  },
  "FileAttachments": [
    {
      "FileId": 2204,
      "FileName": "debug.rar",
      "DownloadUrl": ".\\2204"
    }
  ],
  "Comments": [
    {
      "Message": "I'm using boost 1.43, not sure if it makes a difference ... downloading 1.42 just to be sure.",
      "PostedDate": "2010-05-24T20:25:13.38-07:00",
      "Id": -2147483648
    },
    {
      "Message": "boost 1.42 made no difference.  The above exception is symptomatic, the actual assert that triggers the breakpoint is in node.h:\r\n    assert(offset <= get_total_size());\r\n\r\n>\tpsttomsg.exe!pstsdk::external_block::read_raw(unsigned char * pdest_buffer=0x0015dc7c, unsigned int size=4, unsigned long offset=1064)  Line 1183 + 0x28 bytes\tC++\r\n \tpsttomsg.exe!pstsdk::data_block::read<unsigned long>(unsigned long offset=1064)  Line 1086 + 0x19 bytes\tC++\r\n \tpsttomsg.exe!pstsdk::node_impl::read<unsigned long>(unsigned int page_num=4, unsigned long offset=1064)  Line 931 + 0x64 bytes\tC++\r\n \tpsttomsg.exe!pstsdk::node::read<unsigned long>(unsigned int page_num=4, unsigned long offset=1064)  Line 397 + 0x3a bytes\tC++\r\n \tpsttomsg.exe!pstsdk::basic_table<unsigned long>::read_raw_row<unsigned long>(unsigned long row=124, unsigned short offset=0)  Line 642 + 0x1e bytes\tC++\r\n \tpsttomsg.exe!pstsdk::basic_table<unsigned long>::get_row_id(unsigned long row=124)  Line 628\tC++\r\n \tpsttomsg.exe!pstsdk::const_table_row::get_row_id()  Line 421 + 0x2d bytes\tC++\r\n \tpsttomsg.exe!pstsdk::message_transform_row::operator()(const pstsdk::const_table_row & row={...})  Line 320 + 0x62 bytes\tC++\r\n \tpsttomsg.exe!boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>::dereference()  Line 137 + 0x91 bytes\tC++\r\n \tpsttomsg.exe!boost::iterator_core_access::dereference<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> >(const boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> & f={...})  Line 516 + 0xc bytes\tC++\r\n \tpsttomsg.exe!boost::iterator_facade<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>,pstsdk::message,boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::random_access_traversal_tag>,pstsdk::message,int>::operator*()  Line 634 + 0x12 bytes\tC++\r\n \tpsttomsg.exe!std::_For_each<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x00e33c3a process_message(int,class pstsdk::message const &), 3, _1))  Line 22 + 0xf bytes\tC++\r\n \tpsttomsg.exe!std::for_each<boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::message_transform_row,pstsdk::const_table_row_iter,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::message const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x00e33c3a process_message(int,class pstsdk::message const &), 3, _1))  Line 32 + 0xa7 bytes\tC++\r\n \tpsttomsg.exe!process_folder(int tab_depth=2, const pstsdk::folder & f={...})  Line 21 + 0x8f bytes\tC++\r\n \tpsttomsg.exe!std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>::_ApplyX<void,int &,pstsdk::folder &>(int & _Ax0=2, pstsdk::folder & _Ax1={...})  Line 7 + 0x2a bytes\tC++\r\n \tpsttomsg.exe!std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> >::_ApplyX<void,pstsdk::folder,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &>(pstsdk::folder && _Bx0={...}, std::tr1::_Nil & _Bx1={...}, std::tr1::_Nil & _Bx2={...}, std::tr1::_Nil & _Bx3={...}, std::tr1::_Nil & _Bx4={...}, std::tr1::_Nil & _Bx5={...}, std::tr1::_Nil & _Bx6={...}, std::tr1::_Nil & _Bx7={...}, std::tr1::_Nil & _Bx8={...}, std::tr1::_Nil & _Bx9={...})  Line 293\tC++\r\n \tpsttomsg.exe!std::tr1::_Bind_base<void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > >::operator()<pstsdk::folder>(pstsdk::folder && _CA0={...})  Line 32\tC++\r\n \tpsttomsg.exe!std::_For_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x00e36b88 process_folder(int,class pstsdk::folder const &), 2, _1))  Line 22 + 0x34 bytes\tC++\r\n \tpsttomsg.exe!std::for_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x00e36b88 process_folder(int,class pstsdk::folder const &), 2, _1))  Line 32 + 0xa7 bytes\tC++\r\n \tpsttomsg.exe!process_folder(int tab_depth=1, const pstsdk::folder & f={...})  Line 22 + 0x8f bytes\tC++\r\n \tpsttomsg.exe!std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>::_ApplyX<void,int &,pstsdk::folder &>(int & _Ax0=1, pstsdk::folder & _Ax1={...})  Line 7 + 0x2a bytes\tC++\r\n \tpsttomsg.exe!std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> >::_ApplyX<void,pstsdk::folder,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &,std::tr1::_Nil &>(pstsdk::folder && _Bx0={...}, std::tr1::_Nil & _Bx1={...}, std::tr1::_Nil & _Bx2={...}, std::tr1::_Nil & _Bx3={...}, std::tr1::_Nil & _Bx4={...}, std::tr1::_Nil & _Bx5={...}, std::tr1::_Nil & _Bx6={...}, std::tr1::_Nil & _Bx7={...}, std::tr1::_Nil & _Bx8={...}, std::tr1::_Nil & _Bx9={...})  Line 293\tC++\r\n \tpsttomsg.exe!std::tr1::_Bind_base<void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > >::operator()<pstsdk::folder>(pstsdk::folder && _CA0={...})  Line 32\tC++\r\n \tpsttomsg.exe!std::_For_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x00e36b88 process_folder(int,class pstsdk::folder const &), 1, _1))  Line 22 + 0x34 bytes\tC++\r\n \tpsttomsg.exe!std::for_each<boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default>,std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > >(boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _First={...}, boost::transform_iterator<pstsdk::folder_transform_row,boost::filter_iterator<pstsdk::is_nid_type<2>,pstsdk::const_table_row_iter>,boost::use_default,boost::use_default> _Last={...}, std::tr1::_Bind<void,void,std::tr1::_Bind2<std::tr1::_Callable_fun<void (__cdecl*const)(int,pstsdk::folder const &),0>,int,std::tr1::_Ph<1> > > _Func=bind(0x00e36b88 process_folder(int,class pstsdk::folder const &), 1, _1))  Line 32 + 0xa7 bytes\tC++\r\n \tpsttomsg.exe!process_folder(int tab_depth=0, const pstsdk::folder & f={...})  Line 22 + 0x8f bytes\tC++\r\n \tpsttomsg.exe!wmain(int __formal=2, wchar_t * * argv=0x001c4938)  Line 29 + 0x33 bytes\tC++\r\n",
      "PostedDate": "2010-05-24T20:34:41.213-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-05-24T21:57:59.037-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Confirmed that it doesn't throw exceptions anymore ... but it still stops after the output I posted earlier.  There's 123 items in the Inbox, but iteration ends unexpectedly after the 13th item is enumerated.",
      "PostedDate": "2010-05-25T07:44:56.577-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Gah!  Tracing through the code, it is indeed called the appropriate number of times ... I think I am being bitten writing the output to the console.  It stops outputting proper data after a few entries when it encounters some foreign characters in the subject line of one of the e-mails.  Sorry for the false alarm!\r\n",
      "PostedDate": "2010-05-25T07:56:50.373-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-14T13:08:34.8-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T02:40:25.72-07:00",
      "Id": -2147483648
    }
  ]
}